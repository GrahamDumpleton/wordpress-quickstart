#!/bin/bash

set -x

set -eo pipefail

# Run the original assemble script. This will ensure that everything is
# copied into place and setup.

/usr/libexec/s2i/assemble

# Create a directory to act as the mount point for the persistent volume.

mkdir /opt/app-root/data
chmod g+w /opt/app-root/data

# Tar up a copy of the original wp-content directory so we can restore
# it when the WordPress image is started up the first time and the
# persistent volume mounted.

tar -C wp-content -cf /opt/app-root/wp-content.tar .

# Also copy the original wp-content directory into the directory used as
# the mount point for the persistent volume just in case image not run
# with a persistent volume.

cp -rp wp-content /opt/app-root/data/wp-content

# Remove the original wp-content directory and replace it with a symlink
# to where it resides under the persistent volume.

rm -r wp-content

ln -s /opt/app-root/data/wp-content wp-content

# Edit the wp-config-sample.php to allow plugins and themes to be
# installed directly into file system.

sed -i "/'DB_COLLATE', *'');/a\
define('FS_METHOD', 'direct');" wp-config-sample.php

# Edit the wp-config-sample.php to force use of a secure connection
# for login and adminstration.

sed -i "/'DB_COLLATE', *'');/a\
define( 'FORCE_SSL_ADMIN', true );" wp-config-sample.php

# Edit the wp-config-sample.php to ensure that static files are served
# up over same protocol as request to avoid mixed content errors.

sed -i "/'DB_COLLATE', *'');/a\
if (strpos(\$_SERVER['HTTP_X_FORWARDED_PROTO'], 'https') !== false) \$_SERVER['HTTPS']='on';" wp-config-sample.php
